<style>
.cbi-input-select {
    width: auto !important;
}
</style>

<style>
    :root {
        --bg-white: #ffffff;
        --bg-light: #f8fafc;
        --bg-gray: #f1f5f9;
        --text-primary: #374151;
        --text-secondary: #64748b;
        --text-title: #4d4d4d;
        --border-color: #b1b1b1;
        --border-light: #e2e8f0;
        --hover-bg: #f8fafc;
        --primary-color: #3b82f6;
        --success-color: #059669;
        --error-color: #dc2626;
        --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        --radius-sm: 6px;
        --radius-md: 6px;
        --transition-fast: 0.15s ease;
        --control-height: 32px;
        --card-bg: #ffffff;
        --card-body-bg: #ffffff;
        --title-bar-bg: #f8f9fa;
        --text-color: #1f2d-3d;
        --text-color-light: #718096;
        --cell-bg-color: #f8f9fa;
        --label-text-color: #343a40;
        --title-color: #212529;
        --tip-bg: #e6f7ff;
        --tip-border: #91d5ff;
        --status-red: #dc3545;
    }

    [data-darkmode="true"] {
        --bg-white: #1f2937;
        --bg-light: #374151;
        --bg-gray: #4b5563;
        --text-primary: #ebebeb;
        --text-secondary: #d0cfcf;
        --text-title: #e5e7eb;
        --border-color: #939393;
        --border-light: #6b7280;
        --hover-bg: #374151;
        --primary-color: #3b82f6;
        --success-color: #34d399;
        --error-color: #ff7070;
        --card-bg: #1f2937;
        --card-body-bg: #000000;
        --title-bar-bg: #374151;
        --text-color: #ebebeb;
        --text-color-light: #d0cfcf;
        --cell-bg-color: #4B5563;
        --label-text-color: #e5e7eb;
        --title-color: #e5e7eb;
        --tip-bg: #1f2937;
        --tip-border: #6b7280;
        --status-red: #ff7070;
    }
    
    [data-darkmode="true"] .info-cell-value b {
        background-color: #000000;
        border-color: #4a5568;
    }

    [data-darkmode="true"] #update_tip {
        color: var(--text-secondary);
    }

    .oc-container { display: grid; gap: 6px; }
    .oc-card { background-color: var(--card-bg); border: 1px solid var(--border-color); border-radius: 0.75rem; box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.075); display: flex; flex-direction: column; padding: 0; overflow: hidden; position: relative; }
    .oc-card-body { flex-grow: 1; display: flex; flex-direction: column; padding: 0.375rem; background-color: var(--card-body-bg); }
    .oc-card-title { font-size: 1rem; font-weight: 600; color: var(--title-color); margin: 0; text-align: left; padding: 0.75rem 1.25rem; background-color: var(--title-bar-bg); border-bottom: 1px solid var(--border-color); }
    #update_tip { text-align: center; padding: 0.75rem; border-radius: 0.375rem; background-color: var(--tip-bg); font-weight: 500; border: 1px solid var(--tip-border); margin: 0.5rem auto; grid-column: 1 / -1; }
    .info-grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 0.5rem; flex-grow: 1; }
    .info-cell { background-color: var(--cell-bg-color); padding: 0.7rem; border-radius: 0.75rem; display: flex; flex-direction: column; justify-content: center; align-items: center; text-align: center; gap: 0.75rem; position: relative; }
    .info-cell-title { font-size: 13px; font-weight: 600; color: var(--text-color-light); }
    .info-cell-value b { font-size: 14px; padding: 0.4rem 0.8rem; border-radius: 0.375rem; font-weight: 500; background-color: #fff; border: 1px solid var(--border-color); color: var(--text-primary); }
    .info-cell-value .green { color: var(--success-color) !important; }
    .info-cell-value .red { color: var(--error-color) !important; }
    .info-cell.update-available .info-cell-value b { padding-right: 22px; position: relative; }
    .info-cell.update-available .info-cell-value b::after { content: ''; position: absolute; top: 50%; right: 8px; transform: translateY(-50%); width: 8px; height: 8px; background-color: var(--status-red); border-radius: 50%; animation: breathing-dot 2s infinite; }
    @keyframes breathing-dot { 0% { box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7); } 70% { box-shadow: 0 0 0 8px rgba(220, 53, 69, 0); } 100% { box-shadow: 0 0 0 0 rgba(220, 53, 69, 0); } }

    .dashboard-btn {
        font-size: 11px !important;
        font-weight: 500 !important;
        color: white !important;
        cursor: pointer !important;
        border-radius: var(--radius-md) !important;
        border: none !important;
        background: var(--primary-color) !important;
        transition: all var(--transition-fast) !important;
        white-space: normal !important;
        text-align: center !important;
        text-decoration: none !important;
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;
        line-height: 1.2 !important;
        flex: 1 !important;
        height: 42px !important;
        outline: none !important;
        padding: 2px 10px !important;
        min-width: 45px;
        margin: 0 !important;
        word-break: normal;
        overflow-wrap: break-word;
    }

    .dashboard-btn:hover {
        background: #2563eb !important;
    }
    
    .dashboard-btn.btn-danger {
        background: #db4d6d !important;
    }

    .dashboard-btn.btn-danger:hover {
        background: #c23656 !important;
        filter: none;
    }
    
    #actions-card .actions-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 0.5rem;
        width: 100%;
    }

    #actions-card .actions-grid > .info-cell {
        min-width: 0;
    }

    #actions-card .oc-action-grid {
        display: grid;
        grid-template-columns: 1fr auto;
        gap: 8px;
        align-items: center;
        width: 100%;
    }

    #actions-card .info-cell-value {
        width: 100%;
    }
    
    #actions-card .dashboard-btn {
        flex: none !important;
        padding: 2px 20px !important;
    }

    .core-settings-layout {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        flex: 1;
    }
    .core-settings-bottom {
        display: grid;
        grid-template-columns: 1fr;
        gap: 0.5rem;
        flex: 1;
    }

    .settings-cell {
        background-color: var(--cell-bg-color);
        padding: 1.25rem;
        border-radius: 0.75rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 1rem;
        height: 100%;
        box-sizing: border-box;
        text-align: center;
    }
    .settings-cell label {
        color: var(--text-color-light) !important;
        font-weight: 600;
        padding: 0;
        text-align: center;
        font-size: 13px;
    }
    .settings-cell .value {
        width: 100%;
        display: flex;
        justify-content: center;
    }
    
    #core-settings-card .settings-cell .value {
        width: 100% !important;
    }

    #core-settings-card .segmented-control {
        display: flex;
        background: var(--card-bg);
        border-radius: 6px;
        padding: 2px;
        gap: 2px;
        position: relative;
        border: 1px solid var(--border-light);
        box-shadow: var(--shadow-sm);
        height: 32px;
        align-items: center;
        white-space: nowrap;
        width: 100% !important;
        max-width: none !important;
    }

    #core-settings-card .segmented-indicator {
        display: none !important;
    }

    #core-settings-card .segmented-control button {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        padding: 5px 10px;
        font-size: 12px !important;
        font-weight: 500 !important;
        color: var(--text-color-light) !important;
        cursor: pointer;
        border-radius: 3px !important;
        transition: all 0.15s ease !important;
        user-select: none;
        height: 26px !important;
        line-height: 1 !important;
        background-color: transparent !important;
        border: none !important;
        transform: none !important;
    }

    #core-settings-card .segmented-control button:not(.active-text):hover {
        color: var(--text-color) !important;
        background: rgba(59, 130, 246, 0.1) !important;
    }

    #core-settings-card .segmented-control button.active-text {
        background-color: var(--primary-color) !important;
        color: #ffffff !important;
        box-shadow: var(--shadow-sm) !important;
        transform: none !important;
    }
    
    [data-darkmode="true"] #core-settings-card .segmented-control {
        background: var(--card-bg);
    }
    
    [data-darkmode="true"] #core-settings-card .segmented-control button:not(.active-text):hover {
        background-color: rgba(59, 130, 246, 0.1) !important;
        color: var(--text-color) !important;
    }

    #cpu-arch-display.info-cell-value,
    #last-check-time-display.info-cell-value {
        position: absolute;
        top: 13px;
        right: 15px;
    }

    #cpu-arch-display b,
    #last-check-time-display b {
        font-size: 11px;
        padding: 2px 6px;
    }

    #version-update-card .action-group-buttons {
        display: flex;
        gap: 8px;
        align-items: center;
        justify-content: center;
        width: 100%;
    }
    
    #version-update-card .action-group-buttons .dashboard-btn {
        flex: 1;
    }
    
    #version-update-card .action-group-buttons .icon-btn {
        flex: 0 0 42px;
        height: 42px;
    }

    .icon-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 28px;
        height: 28px;
        min-width: 28px;
        border: 1px solid var(--border-color);
        border-radius: var(--radius-sm);
        background: var(--bg-white);
        color: var(--text-secondary);
        cursor: pointer;
        transition: all var(--transition-fast);
        padding: 0;
    }

    .icon-btn:hover {
        background: var(--hover-bg) !important;
        border-color: var(--primary-color) !important;
        color: var(--primary-color) !important;
        transform: translateY(-1px) !important;
        box-shadow: var(--shadow-sm) !important;
    }

    .icon-btn svg {
        width: 16px !important;
        height: 16px !important;
    }
    
    @media (min-width: 576px) {
        #actions-card .actions-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }
    
    @media (min-width: 390px) {
        .core-settings-bottom {
            grid-template-columns: 1fr 1fr;
        }
    }
    
    @media (max-width: 385px) {
        .info-grid {
            grid-template-columns: 1fr;
        }
    }

    @media (max-width: 768px) {
        .info-cell-value b {
            font-size: 11px;
        }
        #cpu-arch-display b, #last-check-time-display b {
            font-size: 10px;
        }
    }
    @media (max-width: 575px) {
        .info-cell-value b {
            font-size: 10px;
        }
        #cpu-arch-display b, #last-check-time-display b {
            font-size: 9px;
        }
    }
    
    @media (min-width: 1087px) {
        .oc-container {
            grid-template-columns: repeat(2, 1fr);
        }
        #actions-card {
            grid-column: 1 / -1;
        }
    }

    #version-update-card .action-group-buttons #core-path-btn-container .icon-btn {
        height: 36px;
        flex: 0 0 36px;
        align-self: flex-end;
    }

    .info-cell-title {
        font-size: 13px;
    }
</style>


<p align="center" id="update_tip">
    <b><%:Note: if the update fails, you can manually download and upload%></b>
</p>

<div class="oc-container">
    <div class="oc-card" id="core-settings-card">
        <h2 class="oc-card-title"><%:Core Settings%></h2>
        <div id="cpu-arch-display" class="info-cell-value"></div>
        <div class="oc-card-body">
            <div class="core-settings-layout">
                <div class="core-settings-top">
                    <div class="settings-cell">
                        <label for="CORE_VERSION"><%:Compiled Version%></label>
                        <div class="value">
                            <select class="cbi-input-select" name="CORE_VERSION" id="CORE_VERSION"></select>
                        </div>
                    </div>
                </div>
                <div class="core-settings-bottom">
                    <div class="settings-cell">
                        <label><%:Release Branch%></label>
                        <div class="value">
                            <select name="RELEASE_BRANCH" id="RELEASE_BRANCH" style="display: none;">
                                <option value="master">Master</option>
                                <option value="dev">Developer</option>
                            </select>
                            <div class="segmented-control" data-target="RELEASE_BRANCH">
                                <div class="segmented-indicator"></div>
                                <button type="button" data-value="master">Master</button>
                                <button type="button" data-value="dev">Developer</button>
                            </div>
                        </div>
                    </div>
                    <div class="settings-cell">
                        <label>
                            <%:Smart Core%>&nbsp;<a href="javascript:void(0);" onclick="window.open('https://github.com/vernesong/mihomo/releases', '_blank');" class="info-link" title="<%:View core infos that support smart group%>">(?)</a>
                        </label>
                        <div class="value">
                            <select name="SMART_ENABLE" id="SMART_ENABLE" style="display: none;">
                                <option value="1"><%:Enable%></option>
                                <option value="0"><%:Disable%></option>
                            </select>
                            <div class="segmented-control" data-target="SMART_ENABLE">
                                <div class="segmented-indicator"></div>
                                <button type="button" data-value="1"><%:Enable%></button>
                                <button type="button" data-value="0"><%:Disable%></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="oc-card" id="version-update-card">
        <h2 class="oc-card-title"><%:Version Update%></h2>
        <div id="last-check-time-display" class="info-cell-value"></div>
        <div class="oc-card-body">
            <div class="info-grid">
                <div class="info-cell" id="core-version-cell">
                    <div class="info-cell-title"><%:Core%></div>
                    <div class="info-cell-value" id="CORE_META_CV"><%:Collecting data...%></div>
                </div>
                <div class="info-cell">
                    <div class="info-cell-value">
                        <div class="action-group-buttons">
                            <div id="core_meta_up"></div>
                            <div id="ma_core_meta_up"></div>
                            <div id="core-path-btn-container"></div>
                        </div>
                    </div>
                </div>
                <div class="info-cell" id="client-version-cell">
                    <div class="info-cell-title"><%:Client%></div>
                    <div class="info-cell-value" id="OP_CV"><%:Collecting data...%></div>
                </div>
                <div class="info-cell">
                    <div class="info-cell-value">
                       <div class="action-group-buttons">
                            <div id="op_up"></div>
                            <div id="ma_op_up"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="oc-card" id="actions-card">
        <h2 class="oc-card-title"><%:Quick Actions%></h2>
        <div class="oc-card-body">
            <div class="actions-grid">
                <div class="info-cell">
                    <div class="info-cell-title"><%:Shortcuts%></div>
                    <div class="info-cell-value">
                        <div class="oc-action-grid">
                            <select id="shortcuts-select" class="cbi-input-select">
                                <option value="one_key_update_cdn"><%:Check Update%></option>
                                <option value="restore"><%:Restore Default Config%></option>
                                <option value="remove_core"><%:Remove Core%></option>
                            </select>
                            <button id="shortcuts-execute" class="dashboard-btn"><%:Execute%></button>
                        </div>
                    </div>
                </div>
                <div class="info-cell">
                    <div class="info-cell-title"><%:Backup%></div>
                    <div class="info-cell-value">
                         <div class="oc-action-grid">
                            <select id="backup-select" class="cbi-input-select">
                                <option value="backup_all"><%:Backup OpenClash%></option>
                                <option value="backup_no_core"><%:Backup Exclude Cores%></option>
                                <option value="backup_only_core"><%:Backup Core%></option>
                                <option value="backup_only_config"><%:Backup Config%></option>
                                <option value="backup_only_rule"><%:Backup Rule Provider%></option>
                                <option value="backup_only_proxy"><%:Backup Proxy Provider%></option>
                            </select>
                            <button id="backup-execute" class="dashboard-btn"><%:Execute%></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
    function createOptions(selectElement, options) {
        selectElement.innerHTML = '';
        options.forEach(function(option) {
            var opt = document.createElement('option');
            opt.value = option.value;
            opt.innerHTML = option.text;
            selectElement.appendChild(opt);
        });
    }

    var coreVersionSelect = document.getElementById('CORE_VERSION');
    var coreVersionOptions = [
        {value: "linux-386", text: "<%:linux-386%>"},
        {value: "linux-amd64-v1", text: "<%:linux-amd64-v1(x86-64)%>"},
        {value: "linux-amd64-v2", text: "<%:linux-amd64-v2(x86-64)%>"},
        {value: "linux-amd64-v3", text: "<%:linux-amd64-v3(x86-64)%>"},
        {value: "linux-armv5", text: "<%:linux-armv5%>"},
        {value: "linux-armv6", text: "<%:linux-armv6%>"},
        {value: "linux-armv7", text: "<%:linux-armv7%>"},
        {value: "linux-arm64", text: "<%:linux-arm64(armv8)%>"},
        {value: "linux-loong64-abi1", text: "<%:linux-loong64-abi1%>"},
        {value: "linux-loong64-abi2", text: "<%:linux-loong64-abi2%>"},
        {value: "linux-riscv64", text: "<%:linux-riscv64%>"},
        {value: "linux-s390x", text: "<%:linux-s390x%>"},
        {value: "linux-mips-hardfloat", text: "<%:linux-mips-hardfloat%>"},
        {value: "linux-mips-softfloat", text: "<%:linux-mips-softfloat%>"},
        {value: "linux-mips64", text: "<%:linux-mips64%>"},
        {value: "linux-mips64le", text: "<%:linux-mips64le%>"},
        {value: "linux-mipsle-softfloat", text: "<%:linux-mipsle-softfloat%>"},
        {value: "linux-mipsle-hardfloat", text: "<%:linux-mipsle-hardfloat%>"},
        {value: "0", text: "<%:Not Set%>"}
    ];
    createOptions(coreVersionSelect, coreVersionOptions);

	var last_check_time_display = document.getElementById('last-check-time-display');
	var cpu_arch_display = document.getElementById('cpu-arch-display');
	var core_meta_cv_container = document.getElementById('CORE_META_CV');
    var core_version_cell = document.getElementById('core-version-cell');
	var op_cv_container = document.getElementById('OP_CV');
    var client_version_cell = document.getElementById('client-version-cell');
	var core_meta_up = document.getElementById('core_meta_up');
	var op_up = document.getElementById('op_up');
	var ma_core_meta_up = document.getElementById('ma_core_meta_up');
	var ma_op_up = document.getElementById('ma_op_up');
	var update_tip = document.getElementById('update_tip');
	var release_branch = document.getElementById('RELEASE_BRANCH');
	var smart_enable = document.getElementById('SMART_ENABLE');
    
    core_meta_up.innerHTML = '<input type="button" class="dashboard-btn btn-danger" value="<%:Update Core%>" onclick="return core_update(this,\'Meta\')"/>';
    ma_core_meta_up.innerHTML = '<input type="button" class="dashboard-btn" value="<%:Download Core%>" onclick="return ma_core_update(this,\'Meta\')"/>';
    op_up.innerHTML = '<input type="button" class="dashboard-btn btn-danger" value="<%:Update Client%>" onclick="return op_update(this)"/>';
    ma_op_up.innerHTML = '<input type="button" class="dashboard-btn" value="<%:Download Client%>" onclick="return ma_op_update(this)"/>';

    var pathBtnContainer = document.getElementById('core-path-btn-container');
    if (pathBtnContainer) {
        var pathBtn = document.createElement('button');
        pathBtn.type = 'button';
        pathBtn.className = 'icon-btn';
        pathBtn.title = '<%:View Core Path%>';
        pathBtn.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16"><path d="M4.5 12a.5.5 0 0 0 .5.5h6a.5.5 0 0 0 0-1h-6a.5.5 0 0 0-.5.5zm-2 1.5A2.5 2.5 0 0 1 0 11V5a2.5 2.5 0 0 1 2.5-2.5h11A2.5 2.5 0 0 1 16 5v6a2.5 2.5 0 0 1-2.5 2.5h-11zm11-1a1.5 1.5 0 0 0 1.5-1.5V5a1.5 1.5 0 0 0-1.5-1.5h-11A1.5 1.5 0 0 0 1 5v6a1.5 1.5 0 0 0 1.5 1.5h11z"/><path d="M2.5 4a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h11a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-11zm0 3a.5.5 0 0 0 0 1h11a.5.5 0 0 0 0-1h-11z"/></svg>';
        pathBtn.addEventListener('click', function() {
    		alert('<%:Core Path:%>\n\n/etc/openclash/core/clash_meta');
    	});
        pathBtnContainer.appendChild(pathBtn);
    }

    var originalTipText = document.getElementById('update_tip').innerHTML;
    function saveSettings() {
        var v = coreVersionSelect.value;
        var r = release_branch.value;
        var s = smart_enable.value;
        var tipNode = document.getElementById('update_tip');
        tipNode.innerHTML = '<b><%:Settings have been saved...%></b>';
        tipNode.style.borderColor = '#4299e1';
        
        XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "save_corever_branch")%>', {core_ver: v, release_branch: r, smart_enable: s}, function(x, status) {
            setTimeout(function() {
                tipNode.innerHTML = originalTipText;
                tipNode.style.borderColor = 'var(--tip-border)';
            }, 1500);
        });
    }

    function setupSegmentedControls() {
        document.querySelectorAll('.segmented-control').forEach(function(control) {
            var targetId = control.dataset.target;
            var targetSelect = document.getElementById(targetId);
            if (!targetSelect) return;

            var buttons = control.querySelectorAll('button');
            
            function update() {
                var currentValue = targetSelect.value;
                var activeButton = control.querySelector('button[data-value="' + currentValue + '"]');
                
                buttons.forEach(function(btn){ btn.classList.remove('active-text'); });
                
                if (activeButton) {
                    activeButton.classList.add('active-text');
                }
            }

            buttons.forEach(function(button) {
                button.addEventListener('click', function() {
                    if (targetSelect.value !== this.dataset.value) {
                        targetSelect.value = this.dataset.value;
                        update();
                        saveSettings();
                    }
                });
            });
            update();
        });
    }

	XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "update_info")%>', null, function(x, status) {
		if ( x && x.status == 200 ) {
			if ( status.corever && status.corever != "0" && status.corever != "" ) {
		  		coreVersionSelect.value = status.corever;
			} else {
		  		coreVersionSelect.value = "0";
			}
			if ( status.release_branch && status.release_branch != "" ) {
		  		release_branch.value = status.release_branch;
			} else {
		  		release_branch.value = "master";
			}
			if ( status.smart_enable && status.smart_enable != "" ) {
				smart_enable.value = status.smart_enable;
			} else {
				smart_enable.value = "0";
			}
		}
		else {
			coreVersionSelect.value = "0";
			release_branch.value = "master";
			smart_enable.value = "0";
		}
        setupSegmentedControls();
	});

	XHR.poll(300, '<%=luci.dispatcher.build_url("admin", "services", "openclash", "get_last_version")%>', null, function(x, status) {});
	
	function updateStatus(x, status) {
        if ( x && x.status == 200 ) {
            var coreModel = status.coremodel;
            if (coreModel) {
                var parts = coreModel.split(' ');
                if (parts.length >= 2 && parts[0] === parts[1]) {
                    coreModel = parts[0];
                }
            }
            
            if (cpu_arch_display) {
                while (cpu_arch_display.firstChild) { cpu_arch_display.removeChild(cpu_arch_display.lastChild); }
                var cpu_b = document.createElement('b');
                if (coreModel) {
                    cpu_b.className = 'green';
                    cpu_b.textContent = coreModel;
                } else {
                    cpu_b.className = 'red';
                    cpu_b.textContent = '<%:Not Found%>';
                }
                cpu_arch_display.appendChild(cpu_b);
            }

            if (last_check_time_display) {
                while (last_check_time_display.firstChild) { last_check_time_display.removeChild(last_check_time_display.lastChild); }
                var checktime_b = document.createElement('b');
                if ( status.upchecktime != "1" ) { checktime_b.className = 'green'; checktime_b.textContent = status.upchecktime; }
                else { checktime_b.className = 'red'; checktime_b.textContent = '<%:Check Failed%>'; }
                last_check_time_display.appendChild(checktime_b);
            }

            var core_meta_cv_b = document.createElement('b');
            if ( status.coremetacv == "0" ) { core_meta_cv_b.className = 'red'; core_meta_cv_b.textContent = '<%:Unknown%>'; }
            else { core_meta_cv_b.className = 'green'; core_meta_cv_b.textContent = status.coremetacv; }
            if (core_meta_cv_container) {
                while(core_meta_cv_container.firstChild) { core_meta_cv_container.removeChild(core_meta_cv_container.lastChild); }
                core_meta_cv_container.appendChild(core_meta_cv_b);
            }
            
            var coremetalvis = status.corelv;
            if (coremetalvis != status.coremetacv && coremetalvis != "" && coremetalvis != "loading...") {
               core_version_cell.classList.add('update-available');
               core_meta_cv_container.setAttribute('title', '<%:New version available%>: ' + coremetalvis);
               core_meta_cv_container.style.cursor = 'pointer';
               core_meta_cv_container.onclick = function() { alert(this.getAttribute('title')); };
            } else {
               core_version_cell.classList.remove('update-available');
               core_meta_cv_container.removeAttribute('title');
               core_meta_cv_container.style.cursor = '';
               core_meta_cv_container.onclick = null;
            }

            var op_cv_b = document.createElement('b');
            if (status.opcv != "0") { op_cv_b.className = 'green'; op_cv_b.textContent = status.opcv; }
            else { op_cv_b.className = 'red'; op_cv_b.textContent = '<%:Unknown%>'; }
            if (op_cv_container) {
                while(op_cv_container.firstChild) { op_cv_container.removeChild(op_cv_container.lastChild); }
                op_cv_container.appendChild(op_cv_b);
            }
            
            var oplv = status.oplv;
            if (oplv != "" && oplv != "loading..." && status.opcv != "0") {
                function compareVersions(v1, v2) {
                    var ver1 = v1.replace(/^v/, '').split('.'), ver2 = v2.replace(/^v/, '').split('.'), maxLen = Math.max(ver1.length, ver2.length);
                    while (ver1.length < maxLen) ver1.push('0');
                    while (ver2.length < maxLen) ver2.push('0');
                    for (var i = 0; i < maxLen; i++) {
                        var num1 = parseInt(ver1[i]), num2 = parseInt(ver2[i]);
                        if (num1 > num2) return 1;
                        if (num1 < num2) return -1;
                    }
                    return 0;
                }
                if (compareVersions(oplv, status.opcv) > 0) {
                    client_version_cell.classList.add('update-available');
                    op_cv_container.setAttribute('title', '<%:New version available%>: ' + oplv);
                    op_cv_container.style.cursor = 'pointer';
                    op_cv_container.onclick = function() { alert(this.getAttribute('title')); };
                } else {
                    client_version_cell.classList.remove('update-available');
                    op_cv_container.removeAttribute('title');
                    op_cv_container.style.cursor = '';
                    op_cv_container.onclick = null;
                }
            } else {
                client_version_cell.classList.remove('update-available');
                op_cv_container.removeAttribute('title');
                op_cv_container.style.cursor = '';
                op_cv_container.onclick = null;
            }
        }
    }

    XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "update")%>', null, updateStatus);
    XHR.poll(10, '<%=luci.dispatcher.build_url("admin", "services", "openclash", "update")%>', null, updateStatus);

	function handleStartLog(x, status) {
		if (x && x.status == 200) {
			if (status.startlog == "\n" || status.startlog == "" || status.startlog == "##FINISH##\n") {
				const tips = [
					'<b><font><%:Note: if the update fails, you can manually download and upload%></font></b>',
					'<b><font><%:Note: the client may not support update, because the firmware with squashfs format will not release flash space after updating%></font></b>',
					'<b><font><%:Note: options will auto-save when you click to update or download%></font></b>'
				];
				update_tip.innerHTML = tips[Math.floor(Math.random() * 3)];
			}
			else if (status.startlog.match("level=fatal") || status.startlog.indexOf("FTL [Config]") != -1) {
				XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "del_start_log")%>', null, function(x) {});
				alert('<%:OpenClash Start Failed%> :\n\n' +
					(status.startlog.match("level=fatal") ? status.startlog.split('msg=')[1] : status.startlog.split('FTL [Config] ')[1])
				);
			}
			else if (status.startlog != "\n" && status.startlog != "" && status.startlog != "##FINISH##\n") {
				let color = "green";
				if (status.startlog.match("Tip:") || status.startlog.match("提示：")) {
					color = "#ff6f00";
				} else if (status.startlog.match("Error:") || status.startlog.match("错误：")) {
					color = "#FF0000";
				} else if (status.startlog.match("Warning:") || status.startlog.match("警告：")) {
					color = "#ff00bb";
				} else if (status.startlog.match("Watchdog:") || status.startlog.match("守护程序：")) {
					color = "#b300ff";
				}
				update_tip.innerHTML = `<b style=color:${color}>${status.startlog}</b>`;
			}
		}
	}

    XHR.poll(3, '<%=luci.dispatcher.build_url("admin", "services", "openclash", "startlog")%>', null, handleStartLog);
	
	function core_update(btn,type) {
    	var v = coreVersionSelect.value, r = release_branch.value, s = smart_enable.value;
		btn.disabled = true;
		XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "save_corever_branch")%>', {core_ver: v, release_branch: r, smart_enable: s}, function(x, status) {
			if (x && x.status == 200) {
				XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "coreupdate")%>', {core_type: type}, function(x, status) { btn.disabled = false; });
			} else { btn.disabled = false; }
		});
    }

	function op_update(btn) {
        var v = coreVersionSelect.value, r = release_branch.value, s = smart_enable.value;
		btn.disabled = true;
		XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "save_corever_branch")%>', {core_ver: v, release_branch: r, smart_enable: s}, function(x, status) {
			if (x && x.status == 200) {
				XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "opupdate")%>', null, function(x, status) { btn.disabled = false; });
			} else { btn.disabled = false; }
		});
    }
    
    function ma_core_update(btn,type) {
    	var v = coreVersionSelect.value, r = release_branch.value, s = smart_enable.value;
		XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "save_corever_branch")%>', {core_ver: v, release_branch: r, smart_enable: s}, function(x, status) {
    		if (x && x.status == 200) {
    			XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "update_ma")%>', {core_type: type}, function(x, status) {
        			if ( x && x.status == 200 && status.corever && status.corever != "0" ) {
						var url;
						if (s == "1") { url ='https://raw.githubusercontent.com/vernesong/OpenClash/core/'+r+'/smart/clash-'+status.corever+'.tar.gz'; }
                        else { url ='https://raw.githubusercontent.com/vernesong/OpenClash/core/'+r+'/meta/clash-'+status.corever+'.tar.gz'; }
						window.location.href = url;
        			} else { alert('<%:No Compiled Version is Selected, Please Select on The Top and Try Again!%>'); }
           		});
    		}
      });
    }
    
    function ma_op_update(btn) {
        var v = coreVersionSelect.value, r = release_branch.value, s = smart_enable.value;
		XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "save_corever_branch")%>', {core_ver: v, release_branch: r, smart_enable: s}, function(x, status) {
			if (x && x.status == 200) {
				XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "update_ma")%>', null, function(x, status) {
					if ( x && x.status == 200 && status.oplv && status.oplv != "" && status.oplv != "loading..." ) {
						var oplv = status.oplv.substring(status.oplv.indexOf("v") + 1);
						var url;
						if (status.pkg_type == "apk") { url ='https://raw.githubusercontent.com/vernesong/OpenClash/package/'+r+'/luci-app-openclash-'+oplv+'.apk'; }
                        else { url ='https://raw.githubusercontent.com/vernesong/OpenClash/package/'+r+'/luci-app-openclash_'+oplv+'_all.ipk'; }
						window.location.href = url;
					} else { alert('<%:Failed to get the latest version. Please try again later!%>'); }
				});
			}
        });
    }
    
    function restore_config(btn) {
        if (!confirm("<%:Are you sure to restore the default configuration?%>")) return;
        return false;
    }

    function remove_all_core(btn) {
		if (!confirm("<%:Are you sure want to remove all core files?%>")) return;
        btn.disabled = true;
        XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "remove_all_core")%>', null, function(x, status) {
        	if ( x && x.status == 200 ) { alert('<%:Remove succeeded!%>'); }
            else { alert('<%:Remove failed!%>'); }
			btn.disabled = false;
        });
    }
    
    function backup_all_file() { window.location.href='<%="backup"%>'; }
    function backup_no_core() { window.location.href='<%="backup_ex_core"%>'; }
    function backup_only_core() { window.location.href='<%="backup_only_core"%>'; }
    function backup_only_config() { window.location.href='<%="backup_only_config"%>'; }
    function backup_only_rule() { window.location.href='<%="backup_only_rule"%>'; }
    function backup_only_proxy() { window.location.href='<%="backup_only_proxy"%>'; }

	function all_one_key_update_cdn(btn) {
    	var v = coreVersionSelect.value, r = release_branch.value, s = smart_enable.value;
		btn.disabled = true;
		btn.value = '<%:Checking...%>';
		XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "save_corever_branch")%>', {core_ver: v, release_branch: r, smart_enable: s}, function(x, status) {
			if (x && x.status == 200) {
				select_git_cdn("one_key_update");
			}
			btn.value = '<%:Check Update%>';
			btn.disabled = false;
		});
    }

    document.getElementById('shortcuts-execute').addEventListener('click', function() {
        var select = document.getElementById('shortcuts-select');
        var selectedAction = select.value;
        var button = this;

        switch (selectedAction) {
            case 'one_key_update_cdn':
                all_one_key_update_cdn(button);
                break;
            case 'restore':
                restore_config(button);
                break;
            case 'remove_core':
                remove_all_core(button);
                break;
        }
    });

    document.getElementById('backup-execute').addEventListener('click', function() {
        var select = document.getElementById('backup-select');
        var selectedAction = select.value;

        switch (selectedAction) {
            case 'backup_all':
                backup_all_file();
                break;
            case 'backup_no_core':
                backup_no_core();
                break;
            case 'backup_only_core':
                backup_only_core();
                break;
            case 'backup_only_config':
                backup_only_config();
                break;
            case 'backup_only_rule':
                backup_only_rule();
                break;
            case 'backup_only_proxy':
                backup_only_proxy();
                break;
        }
    });
</script>
